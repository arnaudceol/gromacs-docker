---
name: Build and push to Docker Hub
on: [push,pull_request]
env:
  docker_repo: longr/gromacs-docker

jobs:
  # Initialisation job. This will setup python and run build-all-docker.sh to
  # generate all the needed Dockerfiles.
  build_files:
    runs-on: ubuntu-18.04
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    steps:
    - uses: actions/checkout@master
    - uses: actions/setup-python@v1
      with:
        python-version: "3.7"
    - name: Install dependencies
      run: |
        set -xe
        python -VV
        python -m site
        python -m pip install --upgrade pip
        python -m pip install hpccm

    - name: Generate Dockerfiles
      run: bash build-all-dockerfiles.sh

    - name: Upload dockerfiles
      uses: actions/upload-artifact@v2
      with:
        name: dockerfiles
        path: "gmx-*"
        


  # Build each Docker container from the relevant files.  The Dockerfile
  # directories need to be added manualy for each gromacs and cuda version,
  # simd type - perhaps move to variables and for loops in the future?
  # These are then registered on dockerhub for combining later.

  build:
    needs: build_files
    strategy:
      matrix:
        simd: ["AVX_256",
               "AVX_512",
               "AVX2_256",
               "SSE2",
              ]
        gromacs: 2020.2
        cuda: 10.2
    runs-on: ubuntu-18.04
    
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    steps:
    - uses: actions/checkout@master

    - name: Download Dockerfiles
      uses: actions/download-artifact@v2
      with:
        name: dockerfiles

    - name: Build the Docker image
      env:
        DOCKER_REPO: ${{env.docker_repo}}
        docker_tag: gmx-${{matrix.gromacs_version}}-cuda-${{matrix.cuda_version}}-${{matrix.simd}}
      run: docker build -t "${DOCKER_REPO}:${{env.docker_tag}}" -f ${{env.docker_tag}}/Dockerfile .


    - name: List containers
      run: docker ps
      
    - name: Docker Login
      run: docker login -u ${{secrets.DOCKER_USERNAME}} -p ${{secrets.DOCKER_PASSWORD}}

    - name: Docker Push
      env:
        DOCKER_REPO: ${{env.docker_repo}}
      if: "${{ github.event_name == 'push' }}"
      run: docker push "${DOCKER_REPO}:${{matrix.simd}}"


  # Combine all previously generated dockerfiles into one superfile.
  combine:
    needs: build
    runs-on: ubuntu-18.04
    # Only combine and push to Docker Hub if we are on dev branch (TODO: master) and 
    # this is not a pull request. Skip if commit message is "ci skip"
    if: "${{ github.event_name == 'push' && !contains(github.event.head_commit.message, 'ci skip') }}"
    steps:
    - uses: actions/checkout@master

    - name: Docker Login
      run: docker login -u ${{secrets.DOCKER_USERNAME}} -p ${{secrets.DOCKER_PASSWORD}}

    - name: Build the combined Docker image
      env:
        DOCKER_REPO: ${{env.docker_repo}}
      run: docker build -t "${DOCKER_REPO}:gmx-2020.2-cuda-10.2" -t "${DOCKER_REPO}:latest" -f Dockerfile .

      

    - name: Docker Push version tag
      env:
        DOCKER_REPO: ${{env.docker_repo}}
      run: docker push "${DOCKER_REPO}:gmx-2020.2-cuda-10.2"

    - name: Docker Push latest tag
      if: "${{ github.ref == 'master' }}"
      env:
        DOCKER_REPO: ${{env.docker_repo}}
      run: docker push "${DOCKER_REPO}:latest"

