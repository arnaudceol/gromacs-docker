---
name: Build and push to Docker Hub
on: [push,pull_request]
env:
  # docker_repo:   This must be changed between forks.  This should be the
  #                dockerhub repository you will be using to register the
  #                docker containers to.
  docker_repo: longr/gromacs-docker
  fftw: 3.3.8
  fftw_md5: 8aac833c943d8e90d51b697b27d4384d
  gromacs: 2020.2
  cmake: 3.17.1
  gcc: 8
  cuda: 10.1
  openmpi: 4.0.0
  ubuntu: 18.04
  rdtscp: off

  # additional_simd_types:   This is where you need to specify any
  #                          SIMD types that you want to build a
  #                          container for.
  additional_simd_types: "sse2 avx avx2"

jobs:
  get_builds:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - id: set-matrix
      run: |
        for type in ${{ env.additional_simd_types }}; do SIMD=$SIMD{\"simd\":\"$type\"}; done;
        SIMD=`echo $SIMD | sed 's/}{/},{/g'`
        echo "::set-output name=matrix::{\"include\":[$SIMD]}"

  build_fftw_container:
    needs: get_builds
    runs-on: ubuntu-18.04
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    steps:
    - uses: actions/checkout@master

    - name: Set FFTW version
      run: |
        sed -i "s|3.3.8|${{env.fftw}}|g" fftw/Dockerfile
        sed -i "s|8aac833c943d8e90d51b697b27d4384d|${{env.fftw_md5}}|g" fftw/Dockerfile

    - name: Add SIMD types
      run: |
        for type in ${{env.additional_simd_types}}
        do
            sed -i "s|configure|& --enable-$type |g" fftw/Dockerfile
        done
        cat fftw/Dockerfile

    - name: Build fftw container
      run: |
        docker build -t "${{env.docker_repo}}:fftw-${{env.fftw}}" -f fftw/Dockerfile .

    - name: List containers
      run: docker ps

    - name: Docker Login
      run: docker login -u ${{secrets.DOCKER_USERNAME}} -p ${{secrets.DOCKER_PASSWORD}}

    - name: Docker Push
      if: "${{ github.event_name == 'push' }}"
      run: |
        docker push "${{env.docker_repo}}:fftw-${{env.fftw}}"
        sleep 60 # Need

  build_subcontainer:
    needs: build_fftw_container
    strategy:
      matrix: ${{fromJson(needs.get_builds.outputs.matrix)}}
    runs-on: ubuntu-latest

    if: "!contains(github.event.head_commit.message, 'ci skip')"
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'true'
    - uses: actions/setup-python@v1
      with:
        python-version: "3.7"

    - name: Install python dependencies
      run: |
        set -xe
        python -VV
        python -m site
        python -m pip install --upgrade pip
        python -m pip install hpccm

   # The Dockerfiles must be generated based on SIMD type, Gromacs
   # version and CUDA version
    - name: Generate Dockerfiles
      env:
        docker_tag: gmx-${{env.gromacs}}-cuda-${{env.cuda}}-${{matrix.simd}}
      run: |
        cd gromacs-hpccm-recipes-mult-stages
        python3 generate_specifications_file.py \
        --format docker \
        --gromacs ${{env.gromacs}} \
        --ubuntu ${{env.ubuntu}} \
        --gcc ${{env.gcc}} \
        --cuda ${{env.cuda}} \
        --cmake ${{env.cmake}} \
        --engines simd=${{matrix.simd}}:rdtscp=${{env.rdtscp}} \
        --fftw ${{env.fftw}} \
        --regtest \
        > Dockerfile

    - name: Build the Docker image
      env:
        docker_tag: gmx-${{env.gromacs}}-cuda-${{env.cuda}}-${{matrix.simd}}
      run: |
        cd gromacs-hpccm-recipes-mult-stages
        docker build -t "${{env.docker_repo}}:${{env.docker_tag}}" -f Dockerfile .

    - name: Docker Login
      run: docker login -u ${{secrets.DOCKER_USERNAME}} -p ${{secrets.DOCKER_PASSWORD}}

    - name: Docker Push
      env:
        docker_tag: gmx-${{env.gromacs}}-cuda-${{env.cuda}}-${{matrix.simd}}
      if: "${{ github.event_name == 'push' }}"
      run: |
        docker push "${{env.docker_repo}}:${{env.docker_tag}}"

  # Combine all subcontainers into a single container.
  # If you specified multiple CUDA or gromacs versions, or
  # you changed them you need to set these below

  build_final_container:
    needs: build_subcontainer
    runs-on: ubuntu-18.04

    # Only combine and push to Docker Hub if we are on dev branch (TODO: master) and 
    # this is not a pull request. Skip if commit message is "ci skip"
    steps:
    - uses: actions/checkout@master

    - name: Edit Dockerfile- Set repo
      run: |
        sed -i "s|gromacs/gromacs-docker|${{env.docker_repo}}|g" Dockerfile

    - name: Edit Dockerfile- Set CUDA version
      run: |
        sed -i "s|FROM nvidia/cuda:10.2|FROM nvidia/cuda:${{env.cuda}}|g" Dockerfile

    - name: Edit Dockerfile- Set Ubuntu version
      run: |
        sed -i "s|runtime-ubuntu18.04|runtime-ubuntu${{env.ubuntu}}|g" Dockerfile

    - name: Edit Dockerfile- Set SIMD types to be loaded
      run: |
        for type in ${{env.additional_simd_types}}
        do
            sed -i "s|GROMACS configurations|a COPY --from=gromacs/gromacs-docker:gmx-${{env.gromacs}}-cuda-${{env.cuda}}-$type     /gromacs /gromacs|g" Dockerfile
        done
        #DEBUG
        cat Dockerfile

    - name: Build the combined Docker image
      env:
        docker_tag: gmx-${{env.gromacs}}-cuda-${{env.cuda}}
      run: |
        docker build -t "${{env.docker_repo}}:${{env.docker_tag}}" -t "${{env.docker_repo}}:latest" -f Dockerfile .

    - name: Docker Login
      run: docker login -u ${{secrets.DOCKER_USERNAME}} -p ${{secrets.DOCKER_PASSWORD}}

    - name: Docker Push version tag
      env:
        docker_tag: gmx-${{env.gromacs}}-cuda-${{env.cuda}}
      run: |
        docker push "${{env.docker_repo}}:${{env.docker_tag}}"

    - name: Docker Push latest tag
      if: github.ref == 'master' || github.repository != 'bioexcel/gromacs-docker'
      run: docker push "${{env.docker_repo}}:latest"

