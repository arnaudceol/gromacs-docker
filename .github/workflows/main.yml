---
name: Build and push to Docker Hub
on: [push,pull_request]
env:
  docker_repo: longr/gromacs-docker
  fftw_repo: longr/fftw


# Need to find a way to add in fftw location as a variable, and also to generate Dockerfile for combine in the same way.  Currently combine needs to be manually changed.
# Set the Dockerfile to take no input as gromacs/docker  JUST USE SED!!!

  
jobs:
  build_fftw_container:
    runs-on: ubuntu-18.04
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    steps:
    - uses: actions/checkout@master

    - name: Build the Docker image
      env:
        DOCKER_REPO: ${{env.docker_repo}}
      run: |
        sed -i 's|gromacs/fftw|longr/fftw|g' Dockerfile
        docker build -t "${DOCKER_REPO}:fftw" -f fftw/Dockerfile .

    - name: List containers
      run: docker ps
      
    - name: Docker Login
      run: docker login -u ${{secrets.DOCKER_USERNAME}} -p ${{secrets.DOCKER_PASSWORD}}

    - name: Docker Push
      env:
        DOCKER_REPO: ${{env.docker_repo}}
      if: "${{ github.event_name == 'push' }}"
      run: docker push "${DOCKER_REPO}:fftw"
    
  build_container:
    strategy:
      matrix:
        simd: ["AVX_256",
               "AVX_512",
               "AVX2_256",
               "SSE2",
              ]
        gromacs: ["2020.2"]
        cuda: ["10.2"]
    runs-on: ubuntu-18.04

    # Initialisation job. This will setup python and run build-all-docker.sh to
    # generate all the needed Dockerfiles.

    if: "!contains(github.event.head_commit.message, 'ci skip')"
    steps:
    - uses: actions/checkout@master
    - uses: actions/setup-python@v1
      with:
        python-version: "3.7"

    - name: Install python dependencies
      run: |
        set -xe
        python -VV
        python -m site
        python -m pip install --upgrade pip
        python -m pip install hpccm


    # Build each Docker container from the relevant files.  The Dockerfile
    # directories need to be added manualy for each gromacs and cuda version,
    # simd type - perhaps move to variables and for loops in the future?
    # These are then registered on dockerhub for combining later.

    - name: Generate Dockerfiles
      env:
        docker_tag: gmx-${{matrix.gromacs}}-cuda-${{matrix.cuda}}-${{matrix.simd}}
      run: |
        mkdir -p ${{env.docker_tag}}
        python3 build-dockerfiles.py --simd ${{matrix.simd}} --gcc 8 --cuda ${{matrix.cuda}} --version ${{matrix.gromacs}} --format docker > ${{env.docker_tag}}/Dockerfile

    - name: Build the Docker image
      env:
        DOCKER_REPO: ${{env.docker_repo}}
        docker_tag: gmx-${{matrix.gromacs}}-cuda-${{matrix.cuda}}-${{matrix.simd}}
      run: |
        echo "${DOCKER_REPO}:${{env.docker_tag}}"
        docker build -t "${DOCKER_REPO}:${{env.docker_tag}}" -f ${{env.docker_tag}}/Dockerfile .

    - name: List containers
      run: docker ps
      
    - name: Docker Login
      run: docker login -u ${{secrets.DOCKER_USERNAME}} -p ${{secrets.DOCKER_PASSWORD}}

    - name: Docker Push
      env:
        DOCKER_REPO: ${{env.docker_repo}}
        docker_tag: gmx-${{matrix.gromacs}}-cuda-${{matrix.cuda}}-${{matrix.simd}}
      if: "${{ github.event_name == 'push' }}"
      run: |
        echo "${DOCKER_REPO}:${{env.docker_tag}}"
        docker push "${DOCKER_REPO}:${{env.docker_tag}}"



  # Combine all previously generated dockerfiles into one superfile.
  combine_containers:
    strategy:
      matrix:
        gromacs: ["2020.2"]
        cuda: ["10.2"]
    #needs: build_container
    runs-on: ubuntu-18.04

    # Only combine and push to Docker Hub if we are on dev branch (TODO: master) and 
    # this is not a pull request. Skip if commit message is "ci skip"
    #if: "${{ github.event_name == 'push' && !contains(github.event.head_commit.message, 'ci skip') }}"
    steps:
    - uses: actions/checkout@master

    - name: Docker Login
      run: docker login -u ${{secrets.DOCKER_USERNAME}} -p ${{secrets.DOCKER_PASSWORD}}

    - name: Build the combined Docker image
      env:
        DOCKER_REPO: ${{env.docker_repo}}
        docker_tag: gmx-${{matrix.gromacs}}-cuda-${{matrix.cuda}}
      run: |
        sed -i 's|gromacs/gromacs-docker|longr/gromacs-docker|g' Dockerfile
        #sed -i 's|gromacs/fftw|longr/fftw|g' Dockerfile
        cat Dockerfile
        echo "${DOCKER_REPO}:${{env.docker_tag}}"
        docker build -t "${DOCKER_REPO}:${{env.docker_tag}}" -t "${DOCKER_REPO}:latest" -f Dockerfile .

    - name: Docker Push version tag
      env:
        DOCKER_REPO: ${{env.docker_repo}}
        docker_tag: gmx-${{matrix.gromacs}}-cuda-${{matrix.cuda}}
      run: |
        echo "${DOCKER_REPO}:${{env.docker_tag}}"
        docker push "${DOCKER_REPO}:${{env.docker_tag}}"

    - name: Docker Push latest tag
      if: "${{ github.ref == 'master' }}"
      env:
        DOCKER_REPO: ${{env.docker_repo}}
      run: docker push "${DOCKER_REPO}:latest"

